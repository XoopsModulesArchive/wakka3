<?php
/**
 * Auto-generated class. CSS syntax highlighting
 *
 * @author  Andrey Demenev <demenev@on-line.jar.ru>
 */

/**
 * @ignore
 */

/**
 * Auto-generated class. CSS syntax highlighting
 *
 * @author  Andrey Demenev <demenev@on-line.jar.ru>
 */
class Text_Highlighter_CSS extends Text_Highlighter
{
    /**
     * PHP4 Compatible Constructor
     *
     * @param array $options
     */
    public function Text_Highlighter_CSS($options = [])
    {
        $this->__construct($options);
    }

    /**
     * Constructor
     *
     * @param array $options
     */
    public function __construct($options = [])
    {
        $this->_syntax = [
            'regions' => [
                'property' => [
                    'name' => 'property',
'case' => false,
'innerClass' => 'code',
'delimClass' => 'reserved',
'start' => '/[a-z][a-z\\d\\-]*\\s*:/i',
'end' => '/(?=;|\\})/i',
'remember' => false,
'lookfor' => [
                        'blocks' => [
                            0 => 'measure',
1 => 'number',
2 => 'identifier',
3 => 'hexcolor',
                        ],
                    ],
                ],
'paramselector' => [
                    'name' => 'paramselector',
'case' => false,
'innerClass' => 'code',
'delimClass' => 'brackets',
'start' => '/\\[/i',
'end' => '/\\]/i',
'remember' => false,
'lookfor' => [
                        'regions' => [
                            0 => 'strsingle',
1 => 'strdouble',
                        ],
'blocks' => [
                            0 => 'paramname',
                        ],
                    ],
                ],
'block' => [
                    'name' => 'block',
'case' => false,
'innerClass' => 'code',
'delimClass' => 'brackets',
'start' => '/\\{/i',
'end' => '/\\}/i',
'remember' => false,
'lookfor' => [
                        'regions' => [
                            0 => 'property',
1 => 'block',
                        ],
'blocks' => [
                            0 => 'selector',
                        ],
                    ],
                ],
'brackets' => [
                    'name' => 'brackets',
'case' => false,
'innerClass' => 'string',
'delimClass' => 'brackets',
'start' => '/\\(/i',
'end' => '/\\)/i',
'remember' => false,
'lookfor' => [
                        'blocks' => [
                            0 => 'bescaped',
                        ],
                    ],
                ],
'strsingle' => [
                    'name' => 'strsingle',
'case' => false,
'innerClass' => 'string',
'delimClass' => 'quotes',
'start' => '/\'/i',
'end' => '/\'/i',
'remember' => false,
'lookfor' => [
                        'blocks' => [
                            0 => 'escaped',
                        ],
                    ],
                ],
'strdouble' => [
                    'name' => 'strdouble',
'case' => false,
'innerClass' => 'string',
'delimClass' => 'quotes',
'start' => '/"/i',
'end' => '/"/i',
'remember' => false,
'lookfor' => [
                        'blocks' => [
                            0 => 'descaped',
                        ],
                    ],
                ],
            ],
'keywords' => [
                'propertyValue' => [
                    'name' => 'propertyValue',
'innerClass' => 'string',
'case' => false,
'inherits' => 'identifier',
'match' => [
                        'far-left' => true,
'left' => true,
'center-left' => true,
'center-right' => true,
'center' => true,
'far-right' => true,
'right-side' => true,
'right' => true,
'behind' => true,
'leftwards' => true,
'rightwards' => true,
'inherit' => true,
'scroll' => true,
'fixed' => true,
'transparent' => true,
'none' => true,
'repeat-x' => true,
'repeat-y' => true,
'repeat' => true,
'no-repeat' => true,
'collapse' => true,
'separate' => true,
'auto' => true,
'top' => true,
'bottom' => true,
'both' => true,
'open-quote' => true,
'close-quote' => true,
'no-open-quote' => true,
'no-close-quote' => true,
'crosshair' => true,
'default' => true,
'pointer' => true,
'move' => true,
'e-resize' => true,
'ne-resize' => true,
'nw-resize' => true,
'n-resize' => true,
'se-resize' => true,
'sw-resize' => true,
's-resize' => true,
'text' => true,
'wait' => true,
'help' => true,
'ltr' => true,
'rtl' => true,
'inline' => true,
'block' => true,
'list-item' => true,
'run-in' => true,
'compact' => true,
'marker' => true,
'table' => true,
'inline-table' => true,
'table-row-group' => true,
'table-header-group' => true,
'table-footer-group' => true,
'table-row' => true,
'table-column-group' => true,
'table-column' => true,
'table-cell' => true,
'table-caption' => true,
'below' => true,
'level' => true,
'above' => true,
'higher' => true,
'lower' => true,
'show' => true,
'hide' => true,
'caption' => true,
'icon' => true,
'menu' => true,
'message-box' => true,
'small-caption' => true,
'status-bar' => true,
'normal' => true,
'wider' => true,
'narrower' => true,
'ultra-condensed' => true,
'extra-condensed' => true,
'condensed' => true,
'semi-condensed' => true,
'semi-expanded' => true,
'expanded' => true,
'extra-expanded' => true,
'ultra-expanded' => true,
'italic' => true,
'oblique' => true,
'small-caps' => true,
'bold' => true,
'bolder' => true,
'lighter' => true,
'inside' => true,
'outside' => true,
'disc' => true,
'circle' => true,
'square' => true,
'decimal' => true,
'decimal-leading-zero' => true,
'lower-roman' => true,
'upper-roman' => true,
'lower-greek' => true,
'lower-alpha' => true,
'lower-latin' => true,
'upper-alpha' => true,
'upper-latin' => true,
'hebrew' => true,
'armenian' => true,
'georgian' => true,
'cjk-ideographic' => true,
'hiragana' => true,
'katakana' => true,
'hiragana-iroha' => true,
'katakana-iroha' => true,
'crop' => true,
'cross' => true,
'invert' => true,
'visible' => true,
'hidden' => true,
'always' => true,
'avoid' => true,
'x-low' => true,
'low' => true,
'medium' => true,
'high' => true,
'x-high' => true,
'mix?' => true,
'repeat?' => true,
'static' => true,
'relative' => true,
'absolute' => true,
'portrait' => true,
'landscape' => true,
'spell-out' => true,
'once' => true,
'digits' => true,
'continuous' => true,
'code' => true,
'x-slow' => true,
'slow' => true,
'fast' => true,
'x-fast' => true,
'faster' => true,
'slower' => true,
'justify' => true,
'underline' => true,
'overline' => true,
'line-through' => true,
'blink' => true,
'capitalize' => true,
'uppercase' => true,
'lowercase' => true,
'embed' => true,
'bidi-override' => true,
'baseline' => true,
'sub' => true,
'super' => true,
'text-top' => true,
'middle' => true,
'text-bottom' => true,
'silent' => true,
'x-soft' => true,
'soft' => true,
'loud' => true,
'x-loud' => true,
'pre' => true,
'nowrap' => true,
'serif' => true,
'sans-serif' => true,
'cursive' => true,
'fantasy' => true,
'monospace' => true,
'empty' => true,
'string' => true,
'strict' => true,
'loose' => true,
'char' => true,
'true' => true,
'false' => true,
'dotted' => true,
'dashed' => true,
'solid' => true,
'double' => true,
'groove' => true,
'ridge' => true,
'inset' => true,
'outset' => true,
'larger' => true,
'smaller' => true,
'xx-small' => true,
'x-small' => true,
'small' => true,
'large' => true,
'x-large' => true,
'xx-large' => true,
'all' => true,
'newspaper' => true,
'distribute' => true,
'distribute-all-lines' => true,
'distribute-center-last' => true,
'inter-word' => true,
'inter-ideograph' => true,
'inter-cluster' => true,
'kashida' => true,
'ideograph-alpha' => true,
'ideograph-numeric' => true,
'ideograph-parenthesis' => true,
'ideograph-space' => true,
'keep-all' => true,
'break-all' => true,
'break-word' => true,
'lr-tb' => true,
'tb-rl' => true,
'thin' => true,
'thick' => true,
'inline-block' => true,
'w-resize' => true,
'hand' => true,
'distribute-letter' => true,
'distribute-space' => true,
'whitespace' => true,
'male' => true,
'female' => true,
'child' => true,
                    ],
                ],
'namedcolor' => [
                    'name' => 'namedcolor',
'innerClass' => 'var',
'case' => false,
'inherits' => 'identifier',
'match' => [
                        'aqua' => true,
'black' => true,
'blue' => true,
'fuchsia' => true,
'gray' => true,
'green' => true,
'lime' => true,
'maroon' => true,
'navy' => true,
'olive' => true,
'purple' => true,
'red' => true,
'silver' => true,
'teal' => true,
'white' => true,
'yellow' => true,
'activeborder' => true,
'activecaption' => true,
'appworkspace' => true,
'background' => true,
'buttonface' => true,
'buttonhighlight' => true,
'buttonshadow' => true,
'buttontext' => true,
'captiontext' => true,
'graytext' => true,
'highlight' => true,
'highlighttext' => true,
'inactiveborder' => true,
'inactivecaption' => true,
'inactivecaptiontext' => true,
'infobackground' => true,
'infotext' => true,
'menu' => true,
'menutext' => true,
'scrollbar' => true,
'threeddarkshadow' => true,
'threedface' => true,
'threedhighlight' => true,
'threedlightshadow' => true,
'threedshadow' => true,
'window' => true,
'windowframe' => true,
'windowtext' => true,
                    ],
                ],
            ],
'blocks' => [
                'atrule' => [
                    'name' => 'atrule',
'case' => false,
'innerClass' => 'var',
'match' => '/(@[a-z\\d]+)/i',
'multiline' => false,
                ],
'selector' => [
                    'name' => 'selector',
'case' => false,
'innerClass' => 'identifier',
'match' => '/(((\\.|#)?[a-z]+[a-z\\d\\-]*(?![a-z\\d\\-]))|(\\*))(?!\\s*:\\s*[\\s\\{])/i',
'multiline' => false,
                ],
'pseudo' => [
                    'name' => 'pseudo',
'case' => false,
'innerClass' => 'special',
'match' => '/:[a-z][a-z\\d\\-]*/i',
'multiline' => false,
                ],
'bescaped' => [
                    'name' => 'bescaped',
'case' => false,
'innerClass' => 'string',
'match' => '/\\\\[\\\\(\\\\)\\\\]/i',
'multiline' => false,
                ],
'escaped' => [
                    'name' => 'escaped',
'case' => false,
'innerClass' => 'special',
'match' => '/\\\\\\\\|\\\\"|\\\\\'|\\\\`/i',
'multiline' => false,
                ],
'descaped' => [
                    'name' => 'descaped',
'case' => false,
'innerClass' => 'special',
'match' => '/\\\\\\\\|\\\\"|\\\\\'|\\\\`|\\\\t|\\\\n|\\\\r/i',
'multiline' => false,
                ],
'measure' => [
                    'name' => 'measure',
'case' => false,
'innerClass' => 'number',
'match' => '/\\d*\\.?\\d+(\\%|em|ex|pc|pt|px|in|mm|cm)/i',
'multiline' => false,
'partClass' => [
                        1 => 'string',
                    ],
                ],
'number' => [
                    'name' => 'number',
'case' => false,
'innerClass' => 'number',
'match' => '/\\d*\\.?\\d+/i',
'multiline' => false,
                ],
'identifier' => [
                    'name' => 'identifier',
'case' => false,
'innerClass' => 'code',
'match' => '/[a-z][a-z\\d\\-]*/i',
'multiline' => false,
                ],
'hexcolor' => [
                    'name' => 'hexcolor',
'case' => false,
'innerClass' => 'var',
'match' => '/#([\\da-f]{6}|[\\da-f]{3})\\b/i',
'multiline' => false,
                ],
'paramname' => [
                    'name' => 'paramname',
'case' => false,
'innerClass' => 'var',
'match' => '/[\\w\\-\\:]+/i',
'multiline' => false,
                ],
            ],
'toplevel' => [
                'blocks' => [
                    0 => 'atrule',
1 => 'selector',
2 => 'pseudo',
                ],
'regions' => [
                    0 => 'paramselector',
1 => 'block',
                ],
            ],
'case' => false,
'defClass' => 'code',
        ];

        parent::_init($options);
    }
}
